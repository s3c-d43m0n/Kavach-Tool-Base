/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package com.ritvik.oracle.sql.update.checker;

import com.sun.security.auth.module.NTSystem;
import java.net.*;
import java.sql.*;
import java.util.*;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.*;
import javax.swing.table.*;
import oracle.jdbc.driver.OracleDriver;
import sun.awt.windows.ThemeReader;

/**
 *
 * @author ritvikc
 */
public class Launcher extends javax.swing.JFrame {
    
    String vUser, vPass, vJDBC;
    final int max=200;
    String ntid;
    /**
     * Creates new form Launcher
     */
    public Launcher() {
        initComponents();
        loadDbEntry();
        resetSelection();
        try {
            NTSystem sys = new NTSystem();
            ntid=sys.getName()+"@"+InetAddress.getLocalHost().getHostName().toString();
        } catch (UnknownHostException ex) {
            Logger.getLogger(Launcher.class.getName()).log(Level.SEVERE, null, ex);
        }
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jLabel1 = new javax.swing.JLabel();
        jPanel1 = new javax.swing.JPanel();
        jLabel2 = new javax.swing.JLabel();
        jPanel5 = new javax.swing.JPanel();
        jScrollPane3 = new javax.swing.JScrollPane();
        jTable1 = new javax.swing.JTable();
        jLabel3 = new javax.swing.JLabel();
        jButton2 = new javax.swing.JButton();
        jButton3 = new javax.swing.JButton();
        jPanel2 = new javax.swing.JPanel();
        jPanel4 = new javax.swing.JPanel();
        jScrollPane1 = new javax.swing.JScrollPane();
        jTextArea1 = new javax.swing.JTextArea();
        jButton1 = new javax.swing.JButton();
        jPanel3 = new javax.swing.JPanel();
        jScrollPane2 = new javax.swing.JScrollPane();
        jTextArea2 = new javax.swing.JTextArea();
        jMenuBar1 = new javax.swing.JMenuBar();
        jMenu2 = new javax.swing.JMenu();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setTitle("Kavach - Shield Against Update Query in Production Oracle SQL");
        setMinimumSize(new java.awt.Dimension(800, 600));
        setPreferredSize(new java.awt.Dimension(800, 600));

        jLabel1.setFont(new java.awt.Font("Cambria", 1, 36)); // NOI18N
        jLabel1.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel1.setIcon(new javax.swing.ImageIcon(getClass().getResource("/com/ritvik/oracle/sql/update/checker/images/shield.png"))); // NOI18N
        jLabel1.setText("KAVACH");

        jPanel1.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));

        jLabel2.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel2.setText("Database Connection");

        jPanel5.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));

        jTable1.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {"DB1"},
                {"DB2"},
                {"DB3"},
                {"DB4"}
            },
            new String [] {
                "Select your Database"
            }
        ) {
            Class[] types = new Class [] {
                java.lang.String.class
            };
            boolean[] canEdit = new boolean [] {
                false
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        jTable1.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jTable1MouseClicked(evt);
            }
        });
        jScrollPane3.setViewportView(jTable1);

        jLabel3.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel3.setText("Please Select DB");

        jButton2.setText("+");
        jButton2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton2ActionPerformed(evt);
            }
        });

        jButton3.setText("-");
        jButton3.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton3ActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel5Layout = new javax.swing.GroupLayout(jPanel5);
        jPanel5.setLayout(jPanel5Layout);
        jPanel5Layout.setHorizontalGroup(
            jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jScrollPane3, javax.swing.GroupLayout.PREFERRED_SIZE, 0, Short.MAX_VALUE)
            .addComponent(jLabel3, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
            .addGroup(jPanel5Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jButton2)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 67, Short.MAX_VALUE)
                .addComponent(jButton3)
                .addContainerGap())
        );
        jPanel5Layout.setVerticalGroup(
            jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel5Layout.createSequentialGroup()
                .addComponent(jScrollPane3, javax.swing.GroupLayout.PREFERRED_SIZE, 0, Short.MAX_VALUE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jLabel3)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jButton2)
                    .addComponent(jButton3))
                .addContainerGap())
        );

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jPanel5, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addContainerGap())
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel2)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jPanel5, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addContainerGap())
        );

        jPanel2.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));

        jPanel4.setBorder(javax.swing.BorderFactory.createTitledBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)), "Please Enter your DML SQL Query Here :", javax.swing.border.TitledBorder.LEFT, javax.swing.border.TitledBorder.TOP));

        jTextArea1.setColumns(20);
        jTextArea1.setRows(5);
        jTextArea1.setWrapStyleWord(true);
        jTextArea1.setCursor(new java.awt.Cursor(java.awt.Cursor.TEXT_CURSOR));
        jScrollPane1.setViewportView(jTextArea1);

        javax.swing.GroupLayout jPanel4Layout = new javax.swing.GroupLayout(jPanel4);
        jPanel4.setLayout(jPanel4Layout);
        jPanel4Layout.setHorizontalGroup(
            jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jScrollPane1)
        );
        jPanel4Layout.setVerticalGroup(
            jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 250, Short.MAX_VALUE)
        );

        jButton1.setText("Execute");
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });

        jPanel3.setBorder(javax.swing.BorderFactory.createTitledBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)), "Query Output", javax.swing.border.TitledBorder.LEFT, javax.swing.border.TitledBorder.TOP));

        jTextArea2.setColumns(20);
        jTextArea2.setRows(5);
        jTextArea2.setWrapStyleWord(true);
        jScrollPane2.setViewportView(jTextArea2);

        javax.swing.GroupLayout jPanel3Layout = new javax.swing.GroupLayout(jPanel3);
        jPanel3.setLayout(jPanel3Layout);
        jPanel3Layout.setHorizontalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jScrollPane2)
        );
        jPanel3Layout.setVerticalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jScrollPane2, javax.swing.GroupLayout.DEFAULT_SIZE, 155, Short.MAX_VALUE)
        );

        javax.swing.GroupLayout jPanel2Layout = new javax.swing.GroupLayout(jPanel2);
        jPanel2.setLayout(jPanel2Layout);
        jPanel2Layout.setHorizontalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(jButton1)
                .addContainerGap())
            .addComponent(jPanel4, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
            .addComponent(jPanel3, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        jPanel2Layout.setVerticalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jPanel4, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jButton1)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jPanel3, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        jMenuBar1.setAutoscrolls(true);
        jMenuBar1.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));

        jMenu2.setText("About");
        jMenu2.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jMenu2MouseClicked(evt);
            }
        });
        jMenuBar1.add(jMenu2);

        setJMenuBar(jMenuBar1);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel1, javax.swing.GroupLayout.DEFAULT_SIZE, 780, Short.MAX_VALUE)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jPanel2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)))
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel1)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jPanel2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addContainerGap())
        );

        pack();
        setLocationRelativeTo(null);
    }// </editor-fold>//GEN-END:initComponents

    private void jMenu2MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jMenu2MouseClicked
        // TODO add your handling code here:
        JOptionPane.showMessageDialog(Launcher.this, "   Designed & Developed by\n\n  Ritvik Chauhan\n(SRE AIO)\n\nPlease Feel Free to Give us Feedback  ;-)", "About US", JOptionPane.INFORMATION_MESSAGE);
    }//GEN-LAST:event_jMenu2MouseClicked

    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed
        // TODO add your handling code here:
        if(vJDBC!=null){
            new Thread(new Runnable() {
                @Override
                public void run() {
                    jButton1.setEnabled(false);
                    int rowsAffected = executeSelectFrom(jTextArea1.getText());
                    if(rowsAffected != -1){
                        int x = -110;
                        String[] options = {"Yes","No"};
                        String[] option2 = {"Okay"};
                        boolean r1000 = true;
                        ImageIcon icon = new ImageIcon(getClass().getResource("/com/ritvik/oracle/sql/update/checker/images/shield.png"));
                        if(rowsAffected >= max){
                            x = JOptionPane.showOptionDialog(Launcher.this, "<html>Please contact DBA team to tune up this query as it is affecting more than <b> "+rowsAffected+" </b> rows.<br/>", "Updating Rows More Than "+max, JOptionPane.OK_OPTION,JOptionPane.QUESTION_MESSAGE,icon,option2,option2[0]); 
                            r1000=false;
                        }
                        else if(rowsAffected > 10){
                            x = JOptionPane.showOptionDialog(Launcher.this, "<html>This query will affect <b> "+rowsAffected+" </b> row(s).<br/><br/>Please confirm with your supervisor before proceeding?<br/></html>", "Please Confirm", JOptionPane.YES_NO_OPTION,JOptionPane.QUESTION_MESSAGE,icon,options,options[1]); 
                        }
                        else{
                            x = JOptionPane.showOptionDialog(Launcher.this, "<html>This query will affect <b> "+rowsAffected+" </b> row(s).<br/><br/>Do you want to continue?</html>", "Please Confirm", JOptionPane.YES_NO_OPTION,JOptionPane.QUESTION_MESSAGE,icon,options,options[1]); 
                        }
                        if(r1000 && x==JOptionPane.YES_OPTION){
                            Connection c;
                            try {
                                Class.forName("oracle.jdbc.driver.OracleDriver");
                                Connection con = DriverManager.getConnection(vJDBC,vUser,vPass);
                                Statement st = con.createStatement();
                                String query = jTextArea1.getText().replaceAll("\\s", " ").trim().replace(";", "");
                                int i=st.executeUpdate(query);
                                jTextArea2.append("---------------------- QUERY AND RESULT ----------------\n");
                                jTextArea2.append("Query:\n"+query+"\nUpdated Rows : "+i+"\n");

                                PreparedStatement p = con.prepareCall("INSERT INTO DND_KAVACH_LOGS(START_TIME, UPDATE_STATEMENT, NO_OF_ROW, NTNET, JDBC) VALUES(?,?,?,?,?)");
                                p.setTimestamp(1, new Timestamp(System.currentTimeMillis()));
                                p.setString(2, query);
                                p.setInt(3, i);
                                p.setString(4, ntid);
                                p.setString(5, vUser+"@"+vJDBC);
                                p.executeUpdate();
                                try{
                                    con.commit();
                                    jTextArea2.append("\nCommited.\n---------------------------------------\n\n");
                                }
                                catch(SQLException e){}                                
                                con.close();
                            } catch (Exception ex) {
                                JOptionPane.showMessageDialog(Launcher.this, ex.getMessage(), ex.getClass().getName(), JOptionPane.ERROR_MESSAGE);
                            }
                            
                        }                
                    }
                    jButton1.setEnabled(true);
                }
            }).start();
        }
        else{
            JOptionPane.showMessageDialog(Launcher.this, "Please Select Databse First","Select DB", JOptionPane.ERROR_MESSAGE);
        }
    }//GEN-LAST:event_jButton1ActionPerformed

    private void jButton2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton2ActionPerformed
        // TODO add your handling code here:
        String dbHost = JOptionPane.showInputDialog(Launcher.this, "Please Enter Oracle Database Hostname :", "Database Host", JOptionPane.QUESTION_MESSAGE);
        if(dbHost==null || dbHost.isEmpty()) return;
        String dbPort = JOptionPane.showInputDialog(Launcher.this, "Please Enter Oracle Database Port :", "Database Port", JOptionPane.QUESTION_MESSAGE);
        if(dbPort==null || dbPort.isEmpty()) return;
        String dbUser = JOptionPane.showInputDialog(Launcher.this, "Please Enter Oracle Database Username :", "Database User", JOptionPane.QUESTION_MESSAGE);
        if(dbUser==null || dbUser.isEmpty()) return;
        String dbPass = JOptionPane.showInputDialog(Launcher.this, "Please Enter Oracle Database Password :", "Database Password", JOptionPane.QUESTION_MESSAGE);
        if(dbPass==null || dbPass.isEmpty()) return;
        String dbsid = JOptionPane.showInputDialog(Launcher.this, "Please Enter Oracle Database Name :", "Database Name", JOptionPane.QUESTION_MESSAGE);
        if(dbsid==null || dbsid.isEmpty()) return;
        
        String vJdbcUrl = "jdbc:oracle:thin:@"+dbHost+":"+dbPort+":"+dbsid+"|"+dbUser+"|"+dbPass;
        String vDbEntry = dbUser+"@"+dbHost;
        
        new Database().add(vDbEntry+"="+vJdbcUrl, true);
        JOptionPane.showMessageDialog(Launcher.this, "Entry Added : "+vDbEntry, "Added", JOptionPane.INFORMATION_MESSAGE);
        loadDbEntry();
    }//GEN-LAST:event_jButton2ActionPerformed

    private void jButton3ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton3ActionPerformed
        // TODO add your handling code here:
        TableModel m = jTable1.getModel();
        int c = jTable1.getSelectedColumn();
        int r = jTable1.getSelectedRow();
        if(c!=-1 && r!=-1){
            String entry = (String)m.getValueAt(r, c);
            if(entry!=null && !entry.isEmpty()){
                new Database().remove(entry);
            }
            else{
                JOptionPane.showMessageDialog(Launcher.this, "Please select databse entry first.", "No Selection", JOptionPane.ERROR_MESSAGE);
            }
        }
        else{
            JOptionPane.showMessageDialog(Launcher.this, "Please select databse entry first.", "No Selection", JOptionPane.ERROR_MESSAGE);
        }
        loadDbEntry();
    }//GEN-LAST:event_jButton3ActionPerformed

    private void jTable1MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jTable1MouseClicked
        // TODO add your handling code here:
        DefaultTableModel m =(DefaultTableModel) jTable1.getModel();
        int c = jTable1.getSelectedColumn();
        int r = jTable1.getSelectedRow();
        if(c!=-1 && r!=-1){
            String entry = (String)m.getValueAt(r, c);
            if(entry!=null && !entry.isEmpty()){
                String dbinfo=new Database().get(entry);
                if(dbinfo!=null && !dbinfo.isEmpty()){
                    String[] ar1 = dbinfo.split("=");
                    String[] ar2 = ar1[1].split("\\|");
                    vJDBC=ar2[0];
                    vUser=ar2[1];
                    vPass=ar2[2];  
                    jLabel3.setText(ar1[0]+" Selected");
                    if(!validLicense()){
                        JOptionPane.showMessageDialog(Launcher.this, "This DB requires special configurations.\n\nPlease contact Abhishek Bhama & Arieh Stern", "Config Issue", JOptionPane.ERROR_MESSAGE);
                        loadDbEntry();
                        resetSelection();    
                    }
                }
                else{
                    loadDbEntry();
                    resetSelection();
                }
            }
            else{
                resetSelection();
            }
        }
        else{
            resetSelection();
        }
    }//GEN-LAST:event_jTable1MouseClicked

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Windows look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Windows".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(Launcher.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(Launcher.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(Launcher.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(Launcher.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new Launcher().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton jButton1;
    private javax.swing.JButton jButton2;
    private javax.swing.JButton jButton3;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JMenu jMenu2;
    private javax.swing.JMenuBar jMenuBar1;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JPanel jPanel3;
    private javax.swing.JPanel jPanel4;
    private javax.swing.JPanel jPanel5;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JScrollPane jScrollPane3;
    private javax.swing.JTable jTable1;
    private javax.swing.JTextArea jTextArea1;
    private javax.swing.JTextArea jTextArea2;
    // End of variables declaration//GEN-END:variables

    private int executeSelectFrom(String text) {
        int ii=-1;
        try {
            text = text.replaceAll("\\s", " ");
            text = text.trim();
            if(text.split(";").length != 1){
                JOptionPane.showMessageDialog(Launcher.this, "ONLY ONE UPDATE AT A TIME", "Check Your Query", JOptionPane.ERROR_MESSAGE);
                return -1;
            }
            if(!text.matches("^.*?[wW][hH][eE][rR][eE] .*$")){
                JOptionPane.showMessageDialog(Launcher.this, "NO WHERE CONDITION FOUND", "Check Your Query", JOptionPane.ERROR_MESSAGE);
                return -1;
            }
            if(!text.matches("^.*?[uU][pP][dD][aA][tT][eE] .*$")){
                JOptionPane.showMessageDialog(Launcher.this, "NO UPDATE STATEMENT FOUND", "Check Your Query", JOptionPane.ERROR_MESSAGE);
                return -1;
            }
            if(!text.matches("^.*?[sS][eE][tT] .*$")){
                JOptionPane.showMessageDialog(Launcher.this, "NO SET CONDITION FOUND", "Check Your Query", JOptionPane.ERROR_MESSAGE);
                return -1;
            }
            text = text.replaceFirst("[uU][pP][dD][aA][tT][eE] ", " SELECT COUNT(*) FROM ");
            text = text.replaceFirst(" [sS][eE][tT] ", " SET ");
            text = text.replaceFirst(" [wW][hH][eE][rR][eE] ", " WHERE ");
            int index = text.indexOf(" SET ");
            int index2=index;
            char[] vTempArray = text.toCharArray();
            int i=index+5;
            for(i=index+5; i< vTempArray.length; i++){
                if(vTempArray[i]=='('){
                    i+=skip(text.substring(i));
                }
                if(text.substring(i).matches("^WHERE.*$")) break;
            }
            index2=i;
            text=text.substring(0,index)+" "+text.substring(index2);
            if(!text.matches("^.*?[wW][hH][eE][rR][eE] .*$")){
                JOptionPane.showMessageDialog(Launcher.this, "NO WHERE CONDITION FOUND", "Check Your Query", JOptionPane.ERROR_MESSAGE);
                return -1;
            }
            text.replace(";", "");
            Class.forName("oracle.jdbc.driver.OracleDriver");
            Connection c = DriverManager.getConnection(vJDBC,vUser,vPass);
            Statement s = c.createStatement();
            text=text+" AND ROWNUM <= "+max;
            ResultSet r = s.executeQuery(text);
            jTextArea2.append("\n\n---------------------------------------");
            jTextArea2.append("\nSELECT QUERY:\n"+text+"\n\n");
            if(r.next()){
                ii=r.getInt(1);                
            }
            c.close();
        } catch (Exception ex) {
            JOptionPane.showMessageDialog(Launcher.this, ex.getMessage(), ex.getClass().getName(), JOptionPane.ERROR_MESSAGE);
            ex.printStackTrace();
        } 
        return ii;
    }

    private int skip(String x) {
        int i=0;
        char[] a = x.toCharArray();
        while(a[i]!=')'){
            i++;
            if(a[i]=='('){
                i+=skip(x.substring(i));
            }
        }
        return i;
    }

    private void loadDbEntry() {
        DefaultTableModel t = (DefaultTableModel)jTable1.getModel();
        int rows=t.getRowCount();
        for(int i=0; i<rows; i++){
            t.removeRow(0);
        }
        ArrayList<String> list = new Database().get();
        for(String entry : list){
            if(entry!=null && !entry.isEmpty()){
                entry = entry.split("=")[0];
                Object[] o = { entry };
                t.addRow(o);
            }
        }
    }

    private void resetSelection() {
        jLabel3.setText("Please select DB");
        vUser = null;
        vPass = null;
        vJDBC = null;
    }

    private boolean validLicense() {
        boolean ret_val=false;
        try {
            Class.forName("oracle.jdbc.driver.OracleDriver");
            Connection c = DriverManager.getConnection(vJDBC,vUser,vPass);
            Statement s = c.createStatement();
            try{
                ResultSet rs = s.executeQuery("SELECT * FROM DND_KAVACH_LOGS WHERE 1=0");
                ret_val=true;    
            }
            catch(SQLSyntaxErrorException ex){}
            c.close();
            
        } catch (ClassNotFoundException ex) {
            Logger.getLogger(Launcher.class.getName()).log(Level.SEVERE, null, ex);
        } catch (SQLException ex) {
            Logger.getLogger(Launcher.class.getName()).log(Level.SEVERE, null, ex);
        }
        return ret_val;
    }
}
